/* 
 * Forge SDK
 *
 * The Forge Platform contains an expanding collection of web service components that can be used with Autodesk cloud-based products or your own technologies. Take advantage of Autodeskâ€™s expertise in design and engineering.
 *

 * Contact: forge.help@autodesk.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace Autodesk.Forge.Model {

	/// <summary>
	/// Post PostBatchSignedS3UploadResponseItem Payload Body Structure
	/// </summary>
	[DataContract]
	public partial class PostBatchSignedS3UploadResponseItem {

		[DataMember (Name = "uploadKey", EmitDefaultValue = false)]
		public string uploadKey { get; set; }

		[DataMember (Name = "uploadExpiration", EmitDefaultValue = false)]
		public string uploadExpiration { get; set; }

		[DataMember (Name = "urlExpiration", EmitDefaultValue = false)]
		public string urlExpiration { get; set; }

		[DataMember (Name = "urls", EmitDefaultValue = false)]
		public string[] urls { get; set; }

		[DataMember (Name = "status", EmitDefaultValue = false)]
		public string status { get; set; }

		[DataMember (Name = "reason", EmitDefaultValue = false)]
		public string reason { get; set; }

		/// <summary>
		/// Initializes a new instance of the <see cref="PostBatchSignedS3UploadResponseItem" /> class.
		/// </summary>
		[JsonConstructorAttribute]
		protected PostBatchSignedS3UploadResponseItem () { }

		public PostBatchSignedS3UploadResponseItem (
			string uploadKey,
			string uploadExpiration,
			string urlExpiration,
			string[] urls,
			string status,
			string reason
		) {
			this.uploadKey = uploadKey;
			this.uploadExpiration = uploadExpiration;
			this.urlExpiration = urlExpiration;
			this.urls = urls;
			this.status = status;
			this.reason = reason;

		}

		public string ToJson () {
			return (JsonConvert.SerializeObject (this, Formatting.Indented));
		}

	}

	/// <summary>
	/// Post PostBatchSignedS3UploadResponse Payload Body Structure
	/// </summary>
	[DataContract]
	public partial class PostBatchSignedS3UploadResponse {

		[DataMember (Name = "results", EmitDefaultValue = false)]
		public PostBatchSignedS3UploadResponseItem[] results { get; set; }

		/// <summary>
		/// Initializes a new instance of the <see cref="PostBatchSignedS3UploadResponse" /> class.
		/// </summary>
		[JsonConstructorAttribute]
		protected PostBatchSignedS3UploadResponse () { }

		public PostBatchSignedS3UploadResponse (PostBatchSignedS3UploadResponseItem item = null) {
			this.results = new PostBatchSignedS3UploadResponseItem [1] { item };
		}

		public PostBatchSignedS3UploadResponse (PostBatchSignedS3UploadResponseItem [] items = null) {
			if ( items == null )
				items = new PostBatchSignedS3UploadResponseItem [0];
			//throw new InvalidDataException ("items is a required property for PostBatchSignedS3UploadResponse and cannot be null");
			this.results = items;
		}

		public string ToJson () {
			return (JsonConvert.SerializeObject (this, Formatting.Indented));
		}

	}

}

